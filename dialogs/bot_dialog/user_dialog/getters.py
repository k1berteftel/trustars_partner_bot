import os

from aiogram import Bot
from aiogram.utils.media_group import MediaGroupBuilder
from aiogram.types import CallbackQuery, User, Message, ContentType, FSInputFile
from aiogram_dialog import DialogManager, ShowMode, StartMode
from aiogram_dialog.api.entities import MediaAttachment, MediaId
from aiogram_dialog.widgets.kbd import Button, Select
from aiogram_dialog.widgets.input import ManagedTextInput
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from nats.js import JetStreamContext

from utils.payments.create_payment import (get_crypto_payment_data, get_oxa_payment_data, get_freekassa_sbp,
                                           get_freekassa_card, _get_ton_usdt, _get_usdt_rub)
from utils.transactions import check_user_premium, get_stars_price
from database.action_data_class import DataInteraction
from config_data.config import load_config, Config
from states.state_groups import startSG, PaymentSG

config: Config = load_config()

premium_usdt = {
    3: 12,
    6: 16,
    12: 29
}


async def rules_menu_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    text = (
        '<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</b>\n–¶–µ–ª—å –º–∞–≥–∞–∑–∏–Ω–∞: –ú–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É—Å–ª—É–≥–∏ –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∑–≤–µ–∑–¥ –≤ Telegram.\n\n'
        '–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–±—è–∑–∞–Ω—ã —Å–æ–±–ª—é–¥–∞—Ç—å –≤—Å–µ –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ –∑–∞–∫–æ–Ω—ã –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º,'
        ' –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫—É–ø–ª–µ–Ω–Ω—ã–µ –∑–≤–µ–∑–¥—ã. –ó–∞–ø—Ä–µ—â–µ–Ω—ã –ø–æ–ø—ã—Ç–∫–∏ –æ–±–º–∞–Ω–∞, –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –∏ –¥—Ä—É–≥–∏–µ '
        '–Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.\n\n–ü—Ä–∏–µ–º –ø–ª–∞—Ç–µ–∂–µ–π: –ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã, '
        '–æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n–û–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –º–∞–≥–∞–∑–∏–Ω–∞:'
        ' –ú–∞–≥–∞–∑–∏–Ω –æ–±—è–∑—É–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –∫—É–ø–ª–µ–Ω–Ω—ã–µ –∑–≤–µ–∑–¥—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã.\n\n–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å '
        '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –í—ã –Ω–µ—Å–µ—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ —É—Å–ª—É–≥–∏.'
        ' –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.\n\n–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ'
        ' –¥–µ–π—Å—Ç–≤–∏—è: –ó–∞–ø—Ä–µ—â–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ, –≤–∫–ª—é—á–∞—è –ø–æ–ø—ã—Ç–∫–∏ '
        '–≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å–ª—É–≥–∏.\n\n<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞</b>\n–£—Å–ª–æ–≤–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞: –í—ã –º–æ–∂–µ—Ç–µ '
        '–∑–∞–ø—Ä–æ—Å–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –∑–≤–µ–∑–¥. –ù—É–∂–Ω—ã —Å–∫—Ä–∏–Ω—ã –æ–ø–ª–∞—Ç—ã –∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–æ—Ç–∞.\n\n'
        '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞: –î–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º '
        '–∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º –¥–∞–Ω–Ω—ã–º. –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–º –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤–∞—à—É –∫–∞—Ä—Ç—É/–∫–æ—à–µ–ª–µ–∫.\n\n'
        '–°—Ä–æ–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞: –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.\n\n<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</b>\n'
        '–°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: –ú—ã –º–æ–∂–µ–º —Å–æ–±–∏—Ä–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ '
        '–∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.\n\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: –ú—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ '
        '—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –∏ '
        '–æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —Å –≤–∞–º–∏.\n\n–†–∞–∑–≥–ª–∞—à–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: –ú—ã –Ω–µ —Ä–∞—Å–∫—Ä–æ–µ–º –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç—Ä–µ—Ç—å–∏–º '
        '–ª–∏—Ü–∞–º, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–ª—É—á–∞–µ–≤, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–º –∏–ª–∏ –≤ —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ '
        '–¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã–º —Å–∏—Å—Ç–µ–º–∞–º).\n\n–°–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: '
        '–ò—Å–ø–æ–ª—å–∑—É—è –Ω–∞—à–∏ —É—Å–ª—É–≥–∏, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.')
    return {'text': text}


async def buy_choose(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    buy = clb.data.split('_')[0]
    dialog_manager.dialog_data.clear()
    dialog_manager.dialog_data['buy'] = buy
    if buy == 'ton':
        await dialog_manager.switch_to(startSG.ton_receipt_menu)
        return
    await dialog_manager.switch_to(startSG.get_username)


async def get_username_getter(dialog_manager: DialogManager, **kwargs):
    buy = dialog_manager.dialog_data.get('buy')
    if buy == 'ton':
        text = 'TON'
    elif buy == 'premium':
        text = '–ü—Ä–µ–º–∏—É–º'
    else:
        text = '–ó–≤–µ–∑–¥—ã'
    return {'present': text}


async def get_stars_amount(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    # await msg.answer('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–æ—Ç–µ –≤–µ–¥—É—Ç—Å—è <b>—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã</b>, –ø—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—èüôè   ')
    # await dialog_manager.switch_to(startSG.start)
    # return
    try:
        amount = int(text)
    except Exception:
        await msg.delete()
        await msg.answer('‚ùóÔ∏è–ö–æ–ª-–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        return
    if not (50 <= amount <= 100000):
        await msg.answer('‚ùóÔ∏è–ö–æ–ª-–≤–æ –∑–≤–µ–∑–¥ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 50 –∏ –º–µ–Ω—å—à–µ 1000000')
        return
    dialog_manager.dialog_data['amount'] = amount
    start_data = {
        'currency': dialog_manager.dialog_data.get('amount'),
        'rate': dialog_manager.dialog_data.get('buy'),
        'username': dialog_manager.dialog_data.get('username')
    }
    await dialog_manager.start(PaymentSG.menu, data=start_data)


async def premium_rate_choose(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    months = int(clb.data.split('_')[0])
    dialog_manager.dialog_data['months'] = months
    start_data = {
        'currency': months,
        'rate': dialog_manager.dialog_data.get('buy'),
        'username': dialog_manager.dialog_data.get('username')
    }
    await dialog_manager.start(PaymentSG.menu, data=start_data)


async def get_ton_amount(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    try:
        amount = int(text)
    except Exception:
        await msg.delete()
        await msg.answer('‚ùóÔ∏è–ö–æ–ª-–≤–æ TON –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        return
    if not (1 <= amount < 100):
        await msg.answer('‚ùóÔ∏è–ö–æ–ª-–≤–æ TON –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 1 –∏ –º–µ–Ω—å—à–µ 100')
        return
    dialog_manager.dialog_data['amount'] = amount
    start_data = {
        'currency': dialog_manager.dialog_data.get('amount'),
        'rate': dialog_manager.dialog_data.get('buy'),
        'username': dialog_manager.dialog_data.get('username')
    }
    await dialog_manager.start(PaymentSG.menu, data=start_data)


async def get_rate_amount_getter(event_from_user: User, dialog_manager: DialogManager, **kwargs):
    username = dialog_manager.dialog_data.get('username')
    address = dialog_manager.dialog_data.get('address')
    buy = dialog_manager.dialog_data.get('buy')
    if buy in ['stars', 'premium']:
        return {
            'username': username,
            'address': False
        }
    else:
        if address:
            return {
                'username': False,
                'address': address
            }
        else:
            return {
                'username': username,
                'address': False
            }


async def get_username(msg: Message, widget: ManagedTextInput, dialog_manager: DialogManager, text: str):
    if not text.startswith('@'):
        await msg.answer('‚ùóÔ∏è–Æ–∑–µ—Ä–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ –∑–Ω–∞–∫–∞ @')
        return
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
    dialog_manager.dialog_data['username'] = text
    buy = dialog_manager.dialog_data.get('buy')
    if buy == 'stars':
        await dialog_manager.switch_to(startSG.get_stars_amount)
    elif buy == 'premium':
        status = await check_user_premium(text, 12)
        if not status:
            await msg.answer('‚ùóÔ∏è–£ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å –ü—Ä–µ–º–∏—É–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –µ—â–µ')
            return
        await dialog_manager.switch_to(startSG.get_premium_rate)
    else:
        await dialog_manager.switch_to(startSG.get_ton_amount)


async def skip_get_username(clb: CallbackQuery, widget: Button, dialog_manager: DialogManager):
    username = clb.from_user.username
    if not username:
        await clb.message.answer('‚ùóÔ∏è–ß—Ç–æ–±—ã —Å–æ–≤–µ—Ä—à–∞—Ç—å –ø–æ–∫—É–ø–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–∞ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç —é–∑–µ—Ä–Ω–µ–π–º')
        return
    session: DataInteraction = dialog_manager.middleware_data.get('session')
    user = await session.get_user(clb.from_user.id)
    if user.username != username:
        await session.update_username(clb.from_user.id, username)
    dialog_manager.dialog_data['username'] = username
    buy = dialog_manager.dialog_data.get('buy')
    if buy == 'stars':
        await dialog_manager.switch_to(startSG.get_stars_amount)
    elif buy == 'premium':
        status = await check_user_premium(username, 12)
        if not status:
            await clb.message.answer('‚ùóÔ∏è–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ü—Ä–µ–º–∏—É–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –µ—â–µ')
            return
        await dialog_manager.switch_to(startSG.get_premium_rate)
    else:
        await dialog_manager.switch_to(startSG.get_ton_amount)




